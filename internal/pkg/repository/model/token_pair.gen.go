// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"reflect"

	"github.com/gofrs/uuid"
)

const TableNameTokenPair = "token_pair"

// TokenPair mapped from table <token_pair>
type TokenPair struct {
	ID     uuid.UUID `gorm:"column:id;type:uuid;primaryKey" json:"id" db:"id"`
	TokenA string    `gorm:"column:token_a;type:varchar;not null" json:"tokenA" db:"token_a"`
	TokenB string    `gorm:"column:token_b;type:varchar;not null" json:"tokenB" db:"token_b"`
}

// TableName TokenPair's table name
func (*TokenPair) TableName() string {
	return TableNameTokenPair
}

func (t TokenPair) GetAllColumns() []string {
	var res []string
	numFields := reflect.TypeOf(t).NumField()
	i := 0
	for i < numFields {
		field := reflect.TypeOf(t).Field(i)
		res = append(res, field.Tag.Get("db"))
		i++
	}
	return res
}
