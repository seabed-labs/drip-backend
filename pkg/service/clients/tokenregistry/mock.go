// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package tokenregistry is a generated GoMock package.
package tokenregistry

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenRegistry is a mock of TokenRegistry interface.
type MockTokenRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockTokenRegistryMockRecorder
}

// MockTokenRegistryMockRecorder is the mock recorder for MockTokenRegistry.
type MockTokenRegistryMockRecorder struct {
	mock *MockTokenRegistry
}

// NewMockTokenRegistry creates a new mock instance.
func NewMockTokenRegistry(ctrl *gomock.Controller) *MockTokenRegistry {
	mock := &MockTokenRegistry{ctrl: ctrl}
	mock.recorder = &MockTokenRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenRegistry) EXPECT() *MockTokenRegistryMockRecorder {
	return m.recorder
}

// GetTokenRegistry mocks base method.
func (m *MockTokenRegistry) GetTokenRegistry(ctx context.Context) (*TokenRegistryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenRegistry", ctx)
	ret0, _ := ret[0].(*TokenRegistryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenRegistry indicates an expected call of GetTokenRegistry.
func (mr *MockTokenRegistryMockRecorder) GetTokenRegistry(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenRegistry", reflect.TypeOf((*MockTokenRegistry)(nil).GetTokenRegistry), ctx)
}

// GetTokenRegistryToken mocks base method.
func (m *MockTokenRegistry) GetTokenRegistryToken(ctx context.Context, mint string) (*Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenRegistryToken", ctx, mint)
	ret0, _ := ret[0].(*Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenRegistryToken indicates an expected call of GetTokenRegistryToken.
func (mr *MockTokenRegistryMockRecorder) GetTokenRegistryToken(ctx, mint interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenRegistryToken", reflect.TypeOf((*MockTokenRegistry)(nil).GetTokenRegistryToken), ctx, mint)
}
