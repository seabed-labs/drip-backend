// Code generated by MockGen. DO NOT EDIT.
// Source: base.go

// Package base is a generated GoMock package.
package base

import (
	context "context"
	reflect "reflect"

	model "github.com/dcaf-labs/drip/pkg/service/repository/model"
	gomock "github.com/golang/mock/gomock"
)

// MockBase is a mock of Base interface.
type MockBase struct {
	ctrl     *gomock.Controller
	recorder *MockBaseMockRecorder
}

// MockBaseMockRecorder is the mock recorder for MockBase.
type MockBaseMockRecorder struct {
	mock *MockBase
}

// NewMockBase creates a new mock instance.
func NewMockBase(ctrl *gomock.Controller) *MockBase {
	mock := &MockBase{ctrl: ctrl}
	mock.recorder = &MockBaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBase) EXPECT() *MockBaseMockRecorder {
	return m.recorder
}

// GetBestTokenSwapsForVaults mocks base method.
func (m *MockBase) GetBestTokenSwapsForVaults(ctx context.Context, vaults []*model.Vault) (map[string]*model.TokenSwap, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBestTokenSwapsForVaults", ctx, vaults)
	ret0, _ := ret[0].(map[string]*model.TokenSwap)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBestTokenSwapsForVaults indicates an expected call of GetBestTokenSwapsForVaults.
func (mr *MockBaseMockRecorder) GetBestTokenSwapsForVaults(ctx, vaults interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBestTokenSwapsForVaults", reflect.TypeOf((*MockBase)(nil).GetBestTokenSwapsForVaults), ctx, vaults)
}
