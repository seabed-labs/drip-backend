// Code generated by MockGen. DO NOT EDIT.
// Source: token.go

// Package token is a generated GoMock package.
package token

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenJob is a mock of TokenJob interface.
type MockTokenJob struct {
	ctrl     *gomock.Controller
	recorder *MockTokenJobMockRecorder
}

// MockTokenJobMockRecorder is the mock recorder for MockTokenJob.
type MockTokenJobMockRecorder struct {
	mock *MockTokenJob
}

// NewMockTokenJob creates a new mock instance.
func NewMockTokenJob(ctrl *gomock.Controller) *MockTokenJob {
	mock := &MockTokenJob{ctrl: ctrl}
	mock.recorder = &MockTokenJobMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenJob) EXPECT() *MockTokenJobMockRecorder {
	return m.recorder
}

// UpsertAllSupportedTokensWithMetadata mocks base method.
func (m *MockTokenJob) UpsertAllSupportedTokensWithMetadata() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpsertAllSupportedTokensWithMetadata")
}

// UpsertAllSupportedTokensWithMetadata indicates an expected call of UpsertAllSupportedTokensWithMetadata.
func (mr *MockTokenJobMockRecorder) UpsertAllSupportedTokensWithMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertAllSupportedTokensWithMetadata", reflect.TypeOf((*MockTokenJob)(nil).UpsertAllSupportedTokensWithMetadata))
}
