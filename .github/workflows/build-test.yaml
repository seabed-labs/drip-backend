name: Build, Test
on:
  pull_request:
  push: { branches: main }

jobs:
  build_backend:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1

      - name: Cache go packages
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build main.go

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          only-new-issues: true
          skip-go-installation: true

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build_backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1

      - name: Install Code Coverage
        uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: ${{ secrets.CC_TEST_REPORTER_ID }}

      - name: Cache go packages
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Code Coverage Before Build
        run: cc-test-reporter before-build

      - name: Run unit tests
        run: go test -coverprofile ./c.out $(go list ./...) || exit $?

      - name: Format Code Coverage File
        run: cc-test-reporter format-coverage -t gocov --prefix github.com/dcaf-protocol/drip c.out

      - name: Code Coverage After Build
        if: ${{ github.event_name != 'pull_request' }}
        run: cc-test-reporter after-build --prefix github.com/Dcaf-Protocol/drip-backend --exit-code $?